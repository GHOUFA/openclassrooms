<?php

namespace GL\GestionBundle\Repository;

/**
 * AaaaaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AaaaaRepository extends \Doctrine\ORM\EntityRepository
{
     public function listReglement()
    {
        $query = $this->createQueryBuilder('a');
        return $query->getQuery()->getResult();
    }

    public function listAttente()
    {
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.statut = :stat')
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function listConfirmation()
    {
        $statut = "En attente de Confirmation";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.statut = :stat')
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function listPaye()
    {
        $statut = "Payé";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.statut = :stat')
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function listAnnule()
    {
        $statut = "Annulé";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.statut = :stat')
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }


    public function findbydateestimation()
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-09")}%");
        return $query->getQuery()->getResult();
    }

    public function findbydateencaisse()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.deatede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-m")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    //Encaisse
    public function findbydateencaissejan()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-01")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissefev()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-02")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissemars()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-03")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaisseavr()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-04")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissemai()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-05")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissejuin()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-06")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissejuillet()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-07")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }


    public function findbydateencaisseaout()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-08")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissesept()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-09")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaisseoct()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-10")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissenov()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-11")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissedec()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-12")}%")
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    //Estimation
    public function findbydateestimationjan()
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-01")}%")
          ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationfev()
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-02")}%")
           ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationmars()
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-03")}%")
           ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationavr()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-04")}%")
           ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationmai()
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-05")}%")
            ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationjuin()
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-06")}%")
            ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationjuillet()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-07")}%")
            ;
        return $query->getQuery()->getResult();
    }


    public function findbydateestimationaout()
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-08")}%")
            ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationsept()
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-09")}%")
           ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationoct()
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-10")}%")
            ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationnov()
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-11")}%")
            ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationdec()
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-12")}%")
            ;
        return $query->getQuery()->getResult();
    }

//par Societe

    public function listReglementSociete($societe)
    {
        $query = $this->createQueryBuilder('a')
                ->leftJoin('a.contrat', 'c')
                ->leftJoin('c.local', 'l')
                ->leftJoin('l.societe', 's')
                ->andWhere('s.id =:id')
            ->setParameter('id', $societe->getId());
        return $query->getQuery()->getResult();
    }

    public function listAttenteSociete($societe)
    {
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.statut = :stat')
            ->setParameter('stat', $statut)
            ->setParameter('id', $societe->getId());
        return $query->getQuery()->getResult();
    }

    public function listConfirmationSociete($societe)
    {
        $statut = "En attente de Confirmation";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.statut = :stat')
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function listPayeSociete($societe)
    {
        $statut = "Payé";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.statut = :stat')
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function listAnnuleSociete($societe)
    {
        $statut = "Annulé";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.statut = :stat')
            ->setParameter('stat', $statut)
            ->setParameter('id', $societe->getId());
        return $query->getQuery()->getResult();
    }


    public function findbydateestimationSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.debutEcheance LIKE :mot')
            ->setParameter('id', $societe->getId())
            ->setParameter('mot', "%{$now->format("Y-09")}%");
        return $query->getQuery()->getResult();
    }

    public function findbydateencaisseSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-m")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    //Encaisse
    public function findbydateencaissejanSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-01")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissefevSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-02")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissemarsSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-03")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaisseavrSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-04")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissemaiSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-05")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissejuinSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-06")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissejuilletSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-07")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }


    public function findbydateencaisseaoutSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-08")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaisseseptSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-09")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaisseoctSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-10")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissenovSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-11")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    public function findbydateencaissedecSociete($societe)
    {

        $now = new \DateTime;
        $statut = "En attente";
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->andWhere('a.statut != :stat')
            ->setParameter('mot', "%{$now->format("Y-12")}%")
            ->setParameter('id', $societe->getId())
            ->setParameter('stat', $statut);
        return $query->getQuery()->getResult();
    }

    //Estimation
    public function findbydateestimationjanSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.debutEcheance LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-01")}%")
            ->setParameter('id', $societe->getId())
          ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationfevSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.debutEcheance LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-02")}%")
            ->setParameter('id', $societe->getId())
          ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationmarsSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-03")}%")
            ->setParameter('id', $societe->getId())
           ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationavrSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datedee LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-04")}%")
            ->setParameter('id', $societe->getId())
            ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationmaiSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-05")}%")
            ->setParameter('id', $societe->getId())
            ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationjuinSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-06")}%")
            ->setParameter('id', $societe->getId())
           ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationjuilletSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-07")}%")
            ->setParameter('id', $societe->getId())
         ;
        return $query->getQuery()->getResult();
    }


    public function findbydateestimationaoutSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-08")}%")
            ->setParameter('id', $societe->getId())
           ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationseptSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-09")}%")
            ->setParameter('id', $societe->getId())
            ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationoctSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-10")}%")
            ->setParameter('id', $societe->getId())
            ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationnovSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.contrat', 'c')
            ->leftJoin('c.local', 'l')
            ->leftJoin('l.societe', 's')
            ->andWhere('s.id =:id')
            ->andWhere('a.datede LIKE :mot')
            ->setParameter('mot', "%{$now->format("Y-11")}%")
            ->setParameter('id', $societe->getId())
           ;
        return $query->getQuery()->getResult();
    }

    public function findbydateestimationdecSociete($societe)
    {

        $now = new \DateTime;
        $query = $this->createQueryBuilder('a')
                ->leftJoin('a.contrat', 'c')
                ->leftJoin('c.local', 'l')
                ->leftJoin('l.societe', 's')
                ->andWhere('s.id =:id')
                ->andWhere('a.datede LIKE :mot')
                ->setParameter('mot', "%{$now->format("Y-12")}%")
            ->setParameter('id', $societe->getId())

            ;
        return $query->getQuery()->getResult();
    }
    
    
}
